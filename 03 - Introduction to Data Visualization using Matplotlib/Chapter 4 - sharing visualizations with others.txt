1.Switching between styles
# Use the "ggplot" style and create new Figure/Axes
plt.style.use('ggplot')
fig, ax = plt.subplots()
ax.plot(seattle_weather["MONTH"], seattle_weather["MLY-TAVG-NORMAL"])
plt.show()
__________________________________________________________________________________
2.Saving a file several times

fig.savefig('my_figure.png')
fig.savefig('my_figure_300dpi.png', dpi=300)
__________________________________________________________________________________
3.Save a figure with different sizes
fig.set_size_inches([3,5])
fig.savefig("figure_3_5.png")
__________________________________________________________________________________
4.Unique values of a column
# Extract the "Sport" column
sports_column = summer_2016_medals['Sport']

# Find the unique values of the "Sport" column
sports = sports_column.unique()

# Print out the unique sports values
print(sports)
__________________________________________________________________________________
5.Automate your visualization
fig, ax = plt.subplots()

# Loop over the different sports branches
for sport in sports:
  # Extract the rows only for this sport
  sport_df = summer_2016_medals[summer_2016_medals["Sport"] == sport]
  # Add a bar for the "Weight" mean with std y error bar
  ax.bar(sport, sport_df["Weight"].mean(), yerr=sport_df["Weight"].std());

ax.set_ylabel("Weight");
ax.set_xticklabels(sports, rotation=90);

# Save the figure to file
fig.savefig("sports_weights.png")
__________________________________________________________________________________